/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package defence.system;

/**
 *
 * @author 94768
 */
public class Tank extends javax.swing.JFrame  implements DefenceObserver {
      
 private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Tank.class.getName());
       private MainController mainController;
    /**
     * Creates new form Tank
     */
    public Tank() {
        initComponents();
         setVisible(true);
         setTitle("Tank");
    }
    
    public void setMainController( MainController mainController){
        this.mainController=mainController;
    }
    
    public MainController getMainColler(){
            return mainController;
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtTankDisplay = new javax.swing.JTextPane();
        checkBoxPositionTank = new javax.swing.JCheckBox();
        txtTank = new javax.swing.JTextField();
        btnSendTank = new javax.swing.JButton();
        lblAreaNotClearedTank = new javax.swing.JButton();
        btn1T = new javax.swing.JButton();
        btn2T = new javax.swing.JButton();
        btn3T = new javax.swing.JButton();
        btn4T = new javax.swing.JButton();
        btnSoldier = new javax.swing.JButton();
        lblSoldier = new javax.swing.JLabel();
        lblAmmo = new javax.swing.JLabel();
        btnAmmo = new javax.swing.JButton();
        spinnerSoldier = new javax.swing.JSpinner();
        spinnerAmmo = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(txtTankDisplay);

        checkBoxPositionTank.setText("Position");
        checkBoxPositionTank.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkBoxPositionTankItemStateChanged(evt);
            }
        });

        btnSendTank.setText("Send");
        btnSendTank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendTankActionPerformed(evt);
            }
        });

        lblAreaNotClearedTank.setText("Area Not Cleared");

        btn1T.setText("Shoot");
        btn1T.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1TActionPerformed(evt);
            }
        });

        btn2T.setText("Missile Opearation");

        btn3T.setText("Redar Operation");

        btn4T.setText("Rotate Shooting");

        btnSoldier.setText("Set Soldier");
        btnSoldier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSoldierActionPerformed(evt);
            }
        });

        btnAmmo.setText("Set Ammo");
        btnAmmo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAmmoActionPerformed(evt);
            }
        });

        spinnerAmmo.setModel(new javax.swing.SpinnerNumberModel(1000, 0, 1000, 1));

        jLabel3.setText("Soldier  Count :");

        jLabel4.setText("Ammo Count  :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn1T)
                                .addGap(73, 73, 73)
                                .addComponent(btn3T))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn2T)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn4T)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblSoldier, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(36, 36, 36)
                                .addComponent(lblAmmo, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spinnerAmmo)
                            .addComponent(spinnerSoldier))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSoldier)
                            .addComponent(btnAmmo))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(lblAreaNotClearedTank, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(checkBoxPositionTank, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTank, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSendTank))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn1T)
                    .addComponent(btn3T))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(lblSoldier)
                            .addComponent(spinnerSoldier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSoldier))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(lblAmmo)
                            .addComponent(spinnerAmmo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAmmo)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn2T)
                        .addComponent(btn4T)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkBoxPositionTank)
                    .addComponent(lblAreaNotClearedTank))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSendTank))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
boolean position=false;
    private void checkBoxPositionTankItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkBoxPositionTankItemStateChanged
        position = evt.getStateChange()==java.awt.event.ItemEvent.SELECTED;
    }//GEN-LAST:event_checkBoxPositionTankItemStateChanged

    private void btnSendTankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendTankActionPerformed
                String textMessage=txtTank.getText();
                 mainController .receivedMessage("Tank : "+textMessage);
    }//GEN-LAST:event_btnSendTankActionPerformed

    //set soldier count
    private void btnSoldierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSoldierActionPerformed
          
        if(position==true){
              lblSoldier.setText(spinnerSoldier.getValue().toString());
        }  else{
       btnSoldier.disable();
        
        }
    }//GEN-LAST:event_btnSoldierActionPerformed

    
    //set Ammo count
    private void btnAmmoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAmmoActionPerformed
            if(position==true){
             lblAmmo.setText(spinnerAmmo.getValue().toString());

        }else{
              btnAmmo.disable();
        
        }    
    }//GEN-LAST:event_btnAmmoActionPerformed

    //reduce Ammo Count after shoot
    private void btn1TActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1TActionPerformed
              if(position==true){
                  int val=Integer.parseInt(lblAmmo.getText());
                int newVal=val-1;
                lblAmmo.setText(Integer.toString(newVal));
              }else{
                 btnAmmo.disable();
              }
    }//GEN-LAST:event_btn1TActionPerformed

    /**
     * @param args the command line arguments
     */



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1T;
    private javax.swing.JButton btn2T;
    private javax.swing.JButton btn3T;
    private javax.swing.JButton btn4T;
    private javax.swing.JButton btnAmmo;
    private javax.swing.JButton btnSendTank;
    private javax.swing.JButton btnSoldier;
    private javax.swing.JCheckBox checkBoxPositionTank;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAmmo;
    private javax.swing.JButton lblAreaNotClearedTank;
    private javax.swing.JLabel lblSoldier;
    private javax.swing.JSpinner spinnerAmmo;
    private javax.swing.JSpinner spinnerSoldier;
    private javax.swing.JTextField txtTank;
    private javax.swing.JTextPane txtTankDisplay;
    // End of variables declaration//GEN-END:variables

    @Override
    
     public void setAreaClearedText(String text){
        lblAreaNotClearedTank.setText(text);
    }
           
    public void update(int sliderLevel) {
        
       if(position==true){       
       if(sliderLevel>=20){
           btn1T.setText("Shoot On");
           btn1T.enable();
       }
       else if(sliderLevel<20){
            btn1T.setText("Shoot");
            btn1T.disable();
       }
       if(sliderLevel>=40){
           btn2T.setText("Missile Operation On");
           btn2T.enable();
       }
       else if(sliderLevel<40){
           btn2T.setText("Missile Operation");
           btn2T.disable();
       }
       if(sliderLevel>=60){
           btn3T.setText("Redar Operation on ");
           btn3T.enable();
       }
       else if(sliderLevel<60){
           btn3T.setText("Redar Operation");
           btn3T.disable();
       }
        if(sliderLevel>=80){
           btn4T.setText("Rotate Shooting on");
           btn4T.enable();
       }
       else if(sliderLevel<80){
          btn4T.setText("Rotate Shooting ");
          btn4T.disable();
       }
       }else{
           btn1T.setText("Shoot");
           btn1T.disable();
           btn2T.setText("Missile Opeartion");
           btn2T.disable();
           btn3T.setText("Redar Opearation");
           btn3T.disable();
           btn4T.setText("Rotate Shooting");
           btn4T.disable();
       }     
    }

    @Override
    public void updateText(String text) {
        txtTankDisplay.setText("Main controller :"+text);
       
    }
}
